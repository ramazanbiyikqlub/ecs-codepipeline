name: AWS Staging Deployment

on:
  workflow_dispatch:
    inputs:
      worker_go_ref:
        description: 'worker-go branch, tag or SHA to build'
        required: true
        default: 'master'

env:
  AWS_REGION: "eu-west-3"
  ECR_REPOSITORY: "nodejs-apps"
  ECS_SERVICE: "nodejs-service"
  ECS_CLUSTER: "ramazan-test"
  ECS_TASK_DEFINITION: ".aws/task-definition.staging.paris.json"
  CONTAINER_NAME: "nodejs-test"

jobs:
  build-n-deploy:
    name: "Build and Deploy"
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      - name: Set github sha
        id: vars
        run: echo "::set-output name=sha_short::${GITHUB_SHA::4}"  
        
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.date.outputs.date }}-${{ steps.vars.outputs.sha_short }}
        run: |
          docker build \
            -t ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG} .
          docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
          echo "::set-output name=image::${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"
      - name: Checkout PoS Adapter
        uses: actions/checkout@v2

      - name: Fill in the new image in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: false
